@page "/"
@using Microsoft.AspNetCore.Identity
@*@using Microsoft.AspNetCore.Components.Authorization*@

@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject NavigationManager _navManager

<PageTitle>Index</PageTitle>

<h1>Welcome!</h1>

@*@if (!_signInManager.IsSignedIn(User)) {
	<h3 class="text-danger">Please, loggin to use following commands</h3>
	}
*@

<div class="my-3">
	<div class="list-group">
		<button type="button" class="list-group-item list-group-item-action py-2" @onclick="@(() => _navManager.NavigateTo("/QuizViewer/"))">
			<div class="fw-bold text-primary">Run a quiz session</div>
			<AuthorizeView>
				<NotAuthorized>
					<a href="Identity/Account/Login">Log in</a> required
				</NotAuthorized>
				<Authorized>&nbsp;</Authorized>
			</AuthorizeView>
		</button>

		<button type="button" class="list-group-item list-group-item-action py-2" @onclick="@(() => _navManager.NavigateTo("/OldQuizSessions"))">
			<div class="fw-bold text-primary">Restore old or not finished quiz session</div>
			<AuthorizeView>
				<NotAuthorized>
					<a href="Identity/Account/Login">Log in</a> required
				</NotAuthorized>
				<Authorized>New!</Authorized>
			</AuthorizeView>
		</button>
	</div>

	<div class="list-group mt-5">
		<button type="button" class="list-group-item list-group-item-action py-2" @onclick="@(() => _navManager.NavigateTo("/QuizSettings"))">
			<div class="fw-bold text-primary">Quiz statistics</div>
			<AuthorizeView>
				<NotAuthorized>
					<a href="Identity/Account/Login">Log in</a> required
				</NotAuthorized>
				<Authorized>&nbsp;</Authorized>
			</AuthorizeView>
		</button>
	</div>
</div>

@*<SurveyPrompt Title="How is Blazor working for you?" />*@

@code {

	[CascadingParameter] public IModalService Modal { get; set; } = default!;

	string? _message;

	async Task ShowModal() {
		var result = await Modal.Show<Confirm>("Welcome to Blazored Modal").Result;

		_message = result.Confirmed
			? "you pressed confirmed!"
			: result.Cancelled
				? "you pressed cancelled :-("
				: "you pressed something else: " + result.Data;

	}

}